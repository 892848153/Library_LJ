// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: wire/wire.proto at 25:1
package com.lj.library.bean.serialization;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import java.io.IOException;
import java.util.List;

import okio.ByteString;

public final class WireAddressBook extends Message<WireAddressBook, WireAddressBook.Builder> {
    public static final ProtoAdapter<WireAddressBook> ADAPTER = new ProtoAdapter_WireAddressBook();

    private static final long serialVersionUID = 0L;

    @WireField(
            tag = 1,
            adapter = "com.lj.library.bean.serialization.WirePerson#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<WirePerson> person;

    public WireAddressBook(List<WirePerson> person) {
        this(person, ByteString.EMPTY);
    }

    public WireAddressBook(List<WirePerson> person, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.person = Internal.immutableCopyOf("person", person);
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.person = Internal.copyOf("person", person);
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof WireAddressBook)) return false;
        WireAddressBook o = (WireAddressBook) other;
        return unknownFields().equals(o.unknownFields())
                && person.equals(o.person);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + person.hashCode();
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (!person.isEmpty()) builder.append(", person=").append(person);
        return builder.replace(0, 2, "WireAddressBook{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<WireAddressBook, Builder> {
        public List<WirePerson> person;

        public Builder() {
            person = Internal.newMutableList();
        }

        public Builder person(List<WirePerson> person) {
            Internal.checkElementsNotNull(person);
            this.person = person;
            return this;
        }

        @Override
        public WireAddressBook build() {
            return new WireAddressBook(person, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_WireAddressBook extends ProtoAdapter<WireAddressBook> {
        ProtoAdapter_WireAddressBook() {
            super(FieldEncoding.LENGTH_DELIMITED, WireAddressBook.class);
        }

        @Override
        public int encodedSize(WireAddressBook value) {
            return WirePerson.ADAPTER.asRepeated().encodedSizeWithTag(1, value.person)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, WireAddressBook value) throws IOException {
            WirePerson.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.person);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public WireAddressBook decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.person.add(WirePerson.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public WireAddressBook redact(WireAddressBook value) {
            Builder builder = value.newBuilder();
            Internal.redactElements(builder.person, WirePerson.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
