apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'AndResGuard'
//apply plugin: 'com.tencent.tinker.patch'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.lj.library"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'lj'
            keyPassword '2021516'
            storeFile file('/Users/liujie_gyh/Documents/ljkeystore')
            storePassword '2021516'
        }
    }

    buildTypes {
        release {
            minifyEnabled true //启动proguard
            shrinkResources true // 编译阶段去除无用的资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'x86'
            universalApk false
        }
    }

    //    android6.0中删除apache包, 用此引用
    useLibrary 'org.apache.http.legacy'
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    // 解决lint检查出错误导致打包失败的问题
    lintOptions {
        abortOnError false
    }
    // 启动DataBinding
    dataBinding {
        enabled = true
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //log日志
    compile 'com.orhanobut:logger:1.11'
    //butterknife
    compile 'com.jakewharton:butterknife:7.0.1'
    //okhttp + retrofit + rxandroid
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    //leakcanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //support 兼容包
    compile('com.android.support:multidex:1.0.1')
    compile 'com.android.support:design:25.3.0'
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:recyclerview-v7:25.3.0'
    //dagger2
    compile 'com.google.dagger:dagger:2.5'
    //android-apt插件-引入dagger-compiler包, 不会编译到最后的源码中
    apt 'com.google.dagger:dagger-compiler:2.5'
    //单元测试-引入junit包, 会自动引入hamcrest包
    testCompile 'junit:junit:4.12'
    //Mock方式的包mockito
    testCompile 'org.mockito:mockito-core:2.0.76-beta'
    //google的protobuf运行时环境
    compile 'com.google.protobuf:protobuf-java:3.0.0-beta-3'
    //square公司出的protobuf方案"wire"的运行时环境
    compile 'com.squareup.wire:wire-runtime:2.2.0'
    //fresco加载图片
    compile 'com.facebook.fresco:fresco:0.12.0'
    //tinker,可选，用于生成application类
    provided('com.tencent.tinker:tinker-android-anno:1.7.1')
    //tinker的核心库
    compile('com.tencent.tinker:tinker-android-lib:1.7.1')

}

// Tinker配置开始-------------------------------
/*tinkerPatch {
    //有问题的apk的地址
    oldApk = "D://app_bug.apk"
    ignoreWarning = false
    useSign = true
    buildConfig{
        tinkerId = "1.0"
    }
    packageConfig{
        //写这个为了修复一个bug,详见github issue #22
        configField("TINKER_ID", "1.0")
    }
    dex{
        dexMode = "jar"
        pattern = ["classes*.dex", "assets/secondary-dex-?.jar"]
        loader = ["com.tencent.tinker.loader.*", "com.lj.library.application.SampleApplication"]
    }
    lib{
        pattern = ["lib/armeabi*//*.so","lib/arm64-v8a*//*.so","lib/armeabi-v7a*//*.so","lib/mips*//*.so","lib/mips64*//*.so","lib/x86*//*.so","lib/x86_64*//*.so"]
    }
    res{
        pattern = ["res*//*", "assets*//*", "resources.arsc", "AndroidManifest.xml"]
        largeModSize = 100
    }
    sevenZip{
        zipArtifact = "com.tencent.mm:SevenZip:1.1.10"
    }
}*/
// Tinker配置结束-------------------------------

// AndResGuard 配置开始----------------------------------
andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    whiteList = [
            // for your icon
            "R.drawable.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for umeng update
            "R.string.umeng*",
            "R.string.UM*",
            "R.string.tb_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.id.umeng*",
            // umeng share for sina
            "R.drawable.sina*",
            // for google-services.json
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key",
            // umeng share for facebook
            "R.layout.*facebook*",
            "R.id.*facebook*",
            // umeng share for messager
            "R.layout.*messager*",
            "R.id.*messager*",
            // umeng share commond
            "R.id.progress_bar_parent",
            "R.id.webView"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.1.13'
        //path = "/usr/local/bin/7za"
    }
}
// AndResGuard 配置结束---------------------------------
