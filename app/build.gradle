apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'AndResGuard'
apply from: 'tinker-support.gradle'
apply plugin: 'bugly'

bugly {
    appId = 'b1e580cd5e' // 注册时分配的App ID
    appKey = '1548eece-4f5f-478d-a23e-b75944144286' // 注册时分配的App Key
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.lj.library"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 3
        versionName "1.0"
        multiDexEnabled true
    }

    dexOptions {
        jumboMode true
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'lj'
            keyPassword '2021516'
            storeFile file('/Users/liujie_gyh/Documents/ljkeystore')
            storePassword '2021516'
        }
    }

    buildTypes {
        release {
            minifyEnabled false //启动proguard
            shrinkResources false // 编译阶段去除无用的资源, 设为true打包会出错，有空研究下
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    splits {
        abi {
            enable true
            reset()
            include /*'armeabi-v7a',*/ 'x86'
            universalApk true
        }
    }

    //    android6.0中删除apache包, 用此引用
    useLibrary 'org.apache.http.legacy'
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    // 解决lint检查出错误导致打包失败的问题
    lintOptions {
        abortOnError false
    }
    // 启动DataBinding
    dataBinding {
        enabled = true
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //log日志
    compile 'com.orhanobut:logger:1.11'
    //butterknife
    compile 'com.jakewharton:butterknife:7.0.1'
    //okhttp + retrofit + rxandroid
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    //leakcanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //support 兼容包
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    //dagger2
    compile 'com.google.dagger:dagger:2.5'
    //android-apt插件-引入dagger-compiler包, 不会编译到最后的源码中
    annotationProcessor 'com.google.dagger:dagger-compiler:2.5'
    //单元测试-引入junit包, 会自动引入hamcrest包
    testCompile 'junit:junit:4.12'
    //Mock方式的包mockito
    testCompile 'org.mockito:mockito-core:2.0.76-beta'
    //google的protobuf运行时环境
    compile 'com.google.protobuf:protobuf-java:3.0.0-beta-3'
    //square公司出的protobuf方案"wire"的运行时环境
    compile 'com.squareup.wire:wire-runtime:2.2.0'
    //fresco加载图片
    compile 'com.facebook.fresco:fresco:0.12.0'
//    //tinker,可选，用于生成application类
//    provided 'com.tencent.tinker:tinker-android-anno:1.7.1'
//    //tinker的核心库
//    compile 'com.tencent.tinker:tinker-android-lib:1.7.1'
    //facebook的调优工具stecho
    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
    // bugly升级SDK已经集成crash上报功能
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
}

// AndResGuard 配置开始----------------------------------
andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    // 当你使用v2签名的时候，7zip压缩是无法生效的。
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    whiteList = [
            // for your icon
            "R.drawable.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for umeng update
            "R.string.umeng*",
            "R.string.UM*",
            "R.string.tb_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.id.umeng*",
            // umeng share for sina
            "R.drawable.sina*",
            // for google-services.json
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key",
            // umeng share for facebook
            "R.layout.*facebook*",
            "R.id.*facebook*",
            // umeng share for messager
            "R.layout.*messager*",
            "R.id.*messager*",
            // umeng share commond
            "R.id.progress_bar_parent",
            "R.id.webView"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.1'
        //path = "/usr/local/bin/7za"
    }
}
// AndResGuard 配置结束---------------------------------
